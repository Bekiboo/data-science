---
title: "Client Report - Project 0: Introduction"
subtitle: "Course DS 250"
author: "Julien Connault"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import altair as alt
```


## Elevator pitch
_We've successfully set up a robust Python environment and created an insightful Altair chart that highlights a key trend: as engine displacement increases, highway mileage decreases, with a few exceptions in Chevrolet cars with engine displacement between 5 and 7 liters.
You are provided with a chart showcasing this trend, as well as a sample table of the dataset.
With our Python environment set up, we are ready to dive deeper into the data analysis of this dataset._

```{python}
#| label: Fuel economy data from 1999 to 2008 for 38 popular models of cars
#| code-summary: Read project data
# Read the data from the project repository on GitHub and store it in a dataframe called "mpg".
url = "https://github.com/byuidatascience/data4python4ds/raw/master/data-raw/mpg/mpg.csv"
mpg = pd.read_csv(url)
```

## QUESTION|TASK 1
__Finish the readings and be prepared with any questions to get your environment working smoothly (class for on-campus and Slack for online)__

_The Python environment has been installed in its 3.11.3 version, with the relevent extensions for VSCode. All libraries for this class have been installed as well as Quarto, an open-source scientific and technical publishing system_


## QUESTION|TASK 2
__In VS Code, write a python script to create the example Altair chart from section 3.2.2 of the textbook (part of the assigned readings). Note that you have to type chart to see the Altair chart after you create it.__

_type your results and analysis here_

```{python}
#| label: Q2
#| code-summary: Read and format data
# Create a chart using the Altair library and the mpg dataset 
# with engine displacement on the x-axis and highway mileage on the y-axis, as well as color-coded by manufacturer.
chart = (alt.Chart(mpg)
  .encode(
    x=alt.X('displ', title='Engine Displacement'),
    y=alt.Y('hwy', title='Highway Mileage'),
    color=alt.Color('manufacturer'),
    tooltip=['manufacturer', 'model', 'year', 'hwy', 'displ']
  )
  .mark_circle()
  .properties(
    title='Highway Mileage vs. Engine Displacement by Manufacturer'
  )
)

chart
```

_There is a downward trend between the highway mileage and the engine displacement. The higher the engine displacement, the lower the highway mileage. The trend is rather linear, with a few outliers when the engine displacement is between 5 and 7. These outliers are almost exclusively from Chevrolet, indicating that Chevrolet cars with engine displacement between 5 and 7 liters have a higher highway mileage than other cars with similar engine displacement._

## QUESTION|TASK 3
__Your final report should also include the markdown table created from the following (assuming you have mpg from question 2).__

```{python}
#| label: Q3
#| code-summary: Print a markdown table
# Print the first 5 rows of the "mpg" dataframe
# Only include the columns "manufacturer", "model", "year", and "hwy" in the table.
# Use the to_markdown() method to print the table. 
# Do not include the index column.
print(mpg
  .head(5)
  .filter(["manufacturer", "model","year", "hwy"])
  .to_markdown(index=False))
```


## APPENDIX A (All Python Code)

```python
```
```
import pandas as pd
import altair as alt

# Read the data from the project repository on GitHub and store it in a dataframe called "mpg".
url = "https://github.com/byuidatascience/data4python4ds/raw/master/data-raw/mpg/mpg.csv"
mpg = pd.read_csv(url)

# Create a chart using the Altair library and the mpg dataset 
# with engine displacement on the x-axis and highway mileage on the y-axis, as well as color-coded by manufacturer.
# Add tooltips for manufacturer, model, year, highway mileage, and engine displacement.
chart = (alt.Chart(mpg)
  .encode(
    x=alt.X('displ', title='Engine Displacement'),
    y=alt.Y('hwy', title='Highway Mileage'),
    color=alt.Color('manufacturer'),
    tooltip=['manufacturer', 'model', 'year', 'hwy', 'displ']
  )
  .mark_circle()
  .properties(
    title='Highway Mileage vs. Engine Displacement by Manufacturer'
  )
)

# Print the chart
chart

# Print the first 5 rows of the "mpg" dataframe
# Only include the columns "manufacturer", "model", "year", and "hwy" in the table.
# Use the to_markdown() method to print the table. 
# Do not include the index column.
print(mpg
  .head(5)
  .filter(["manufacturer", "model","year", "hwy"])
  .to_markdown(index=False))


```
```
```